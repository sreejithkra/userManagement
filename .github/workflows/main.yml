name: CI/CD Pipeline for user-api

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Setup SSH Key
      - name: Setup SSH Key
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "$SSH_KEY" > user.pem
          chmod 400 user.pem

      # Step 2: Connect to EC2 and Pull Latest Code
      - name: Pull Latest Code from Git
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_IP: ${{ secrets.EC2_IP }}
        run: |
          ssh -i user.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP '
            cd /home/ubuntu/userManagement
            git pull origin main
          '

      # Step 3: Testing and Building Go Application
      - name: Testing and Building Go Application
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_IP: ${{ secrets.EC2_IP }}
        run: |
          ssh -i user.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP '
            # Ensure Go is installed
            sudo apt update
            sudo apt install -y golang-go

            # Verify Go installation
            go version
            
            cd /home/ubuntu/userManagement
            go mod tidy
            go test ./internal/controllers -v
            go build -o myapp ./cmd/main.go
          '

      # Step 4: Restart Application Service
      - name: Restart Application Service
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_IP: ${{ secrets.EC2_IP }}
        run: |
          ssh -i user.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP '
            sudo systemctl restart myapp.service
          '

      # Step 5: Cleanup SSH Key
      - name: Cleanup
        run: |
          rm -f user.pem
